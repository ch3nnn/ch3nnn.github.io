<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Filebeat on Ch3nnn!Blog</title><link>https://blog.ch3nnn.cn/tags/filebeat/</link><description>Recent content in Filebeat on Ch3nnn!Blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 09 Jan 2023 16:36:01 +0000</lastBuildDate><atom:link href="https://blog.ch3nnn.cn/tags/filebeat/index.xml" rel="self" type="application/rss+xml"/><item><title>Filebeat轻量型日志采集器及output插件开发</title><link>https://blog.ch3nnn.cn/posts/2023/filebeat%E8%BD%BB%E9%87%8F%E5%9E%8B%E6%97%A5%E5%BF%97%E9%87%87%E9%9B%86%E5%99%A8%E5%8F%8Aoutput%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91/</link><pubDate>Mon, 09 Jan 2023 16:36:01 +0000</pubDate><guid>https://blog.ch3nnn.cn/posts/2023/filebeat%E8%BD%BB%E9%87%8F%E5%9E%8B%E6%97%A5%E5%BF%97%E9%87%87%E9%9B%86%E5%99%A8%E5%8F%8Aoutput%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91/</guid><description>&lt;blockquote>
&lt;p>无论您是从安全设备、云、容器、主机还是 OT 进行数据收集，Filebeat 都将为您提供一种轻量型方法，用于转发和汇总日志与文件，让简单的事情不再繁杂。&lt;/p>&lt;/blockquote>
&lt;h2 id="介绍">介绍&lt;/h2>
&lt;p>Filebeat 是使用 Golang 实现的轻量型日志采集器。本质上是一个 agent ，可以安装在各个节点上，根据配置读取对应位置的日志，并上报到相应的地方去。&lt;/p>
&lt;h3 id="概要">概要&lt;/h3>
&lt;p>Filebeat 并不依赖于 ElasticSearch，可以单独存在。我们可以单独使用Filebeat进行日志的上报和搜集。filebeat 内置了常用的 Output 组件, 例如 kafka、ElasticSearch、redis 等，出于调试考虑，也可以输出到 console 和 file 。我们可以利用现有的 Output 组件，将日志进行上报。&lt;/p>
&lt;h3 id="整体工作原理">整体工作原理&lt;/h3>
&lt;p>Filebeat 由两个主要组件组成：harvester 和 prospector。&lt;/p>
&lt;ul>
&lt;li>harvester (采集器) 的主要职责是读取单个文件的内容。读取每个文件，并将内容发送到 the output。 每个文件启动一个 harvester，harvester 负责打开和关闭文件，这意味着在运行时文件描述符保持打开状态。如果文件在读取时被删除或重命名，Filebeat 将继续读取文件。&lt;/li>
&lt;li>prospector (查找器) 的主要职责是管理 harvester 并找到所有要读取的文件来源。如果输入类型为日志，则查找器将查找路径匹配的所有文件，并为每个文件启动一个 harvester。每个 prospector 都在自己的 Go 协程中运行。&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;em>注：Filebeat prospector只能读取本地文件， 没有功能可以连接到远程主机来读取存储的文件或日志。&lt;/em>&lt;/p>&lt;/blockquote>
&lt;p>由以上两个组件一起工作来读取文件（tail file）并将事件数据发送到指定的输出。
下图是 Filebeat 官方提供的架构图：
&lt;img src="https://cdn.jsdelivr.net/gh/ch3nnn/picgo/blog/imgs20230109163928.png" alt="">&lt;/p>
&lt;h4 id="filebeat背后的老大">Filebeat背后的“老大”&lt;/h4>
&lt;p>说到Filebeat，它其实只是&lt;a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Felastic%2Fbeats%2Ftree%2Fmaster%2Flibbeat">beats家族&lt;/a>众多成员中的一个。除了Filebeat, 还有很多其他的beat小伙伴：&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>beat&lt;/th>
 &lt;th>功能&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>Filebeat&lt;/td>
 &lt;td>收集日志文件&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Metricbeat&lt;/td>
 &lt;td>收集各种指标数据&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Packetbeat&lt;/td>
 &lt;td>收集网络数据包&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Auditbeat&lt;/td>
 &lt;td>收集审计数据&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Heartbeat&lt;/td>
 &lt;td>收集服务运行状态监测数据&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&amp;hellip;&lt;/td>
 &lt;td>&amp;hellip;&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>如果你愿意的话，你也可以按照beat的规范来写自己的beat。
能实现以上这些beat，都离不开beats家族真正的“老大”—— libbeat， 它是beat体系的核心库。我们接下来看一下libbeat到底都作了些什么&lt;/p></description></item></channel></rss>