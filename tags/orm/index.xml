<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ORM on Ch3nnn!Blog</title><link>https://blog.ch3nnn.cn/tags/orm/</link><description>Recent content in ORM on Ch3nnn!Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 16 Jan 2023 17:29:45 +0000</lastBuildDate><atom:link href="https://blog.ch3nnn.cn/tags/orm/index.xml" rel="self" type="application/rss+xml"/><item><title>Facebook 开源 Golang 实体框架 Ent</title><link>https://blog.ch3nnn.cn/posts/2023/facebook-ent%E5%BC%80%E6%BA%90%E5%AE%9E%E4%BD%93%E6%A1%86%E6%9E%B6/</link><pubDate>Mon, 16 Jan 2023 17:29:45 +0000</pubDate><guid>https://blog.ch3nnn.cn/posts/2023/facebook-ent%E5%BC%80%E6%BA%90%E5%AE%9E%E4%BD%93%E6%A1%86%E6%9E%B6/</guid><description>ent是一个简单而又功能强大的Go语言实体框架，ent易于构建和维护应用程序与大数据模型。
图就是代码 - 将任何数据库表建模为Go对象。 轻松地遍历任何图形 - 可以轻松地运行查询、聚合和遍历任何图形结构。 静态类型和显式API - 使用代码生成静态类型和显式API，查询数据更加便捷。 多存储驱动程序 - 支持MySQL, PostgreSQL, SQLite 和 Gremlin。 可扩展 - 简单地扩展和使用Go模板自定义。 安装 go install entgo.io/ent/cmd/ent@latest 快速开始 go mod init &amp;lt;project&amp;gt; 创建你的第一个项目 进入你项目的根目录，然后运行：
go run -mod=mod entgo.io/ent/cmd/ent init User 以上的命令会在&amp;lt;project&amp;gt;/ent/schema/目录下产生User的数据模式（数据模式是数据库系统设计中的专业术语，若对该部分有任何理解问题，请查阅数据库系统的相关书籍）：
package schema import &amp;#34;entgo.io/ent&amp;#34; // User在User实体中组合了ent默认的数据库模式定义 type User struct { ent.Schema } // User的字段 func (User) Fields() []ent.Field { return nil } // User的边 func (User) Edges() []ent.Edge { return nil } 为User 模式添加两个字段：</description></item></channel></rss>